{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","between","x","min","max","determineGreeting","curHr","Date","getHours","App","className","style","color","backgroundColor","fontSize","fontWeight","split","condition","nightCaption","morningCaption","afternoonCaption","noonCaption","Math","floor","random","length","determineCaption","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,0GCI3C,SAASC,EAAQC,EAAGC,EAAKC,GACvB,OAAOF,GAAKC,GAAOD,GAAKE,EAkD1B,SAASC,IACP,IACIC,GADQ,IAAIC,MACEC,WAElB,OAAIP,EAAQK,EAAO,EAAG,IAEXL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,GALpB,sBAOEL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IAElBL,EAAQK,EAAO,EAAG,IATpB,uBAWEL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,IAPrB,qBASEL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,IAHrB,yBAKEL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,KAEnBL,EAAQK,EAAO,GAAI,IATrB,2BASF,EA8BMG,MAzBf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,aAAaC,MAAO,CACpCC,MAAO,UACPC,gBAAiB,YAEjB,6BACE,wBAAIF,MAAO,CACTG,SAAU,OACVC,WAAY,SAEXV,IAAoBW,MAAM,KAAK,IAElC,uBAAGL,MAAO,CACRI,WAAY,WArHxB,SAA0BE,GACxB,IAAMC,EAAe,CACnB,gCACA,+CACA,4BACA,kDACA,mBAGIC,EAAiB,CACrB,mDACA,gDACA,qCACA,mDAGIC,EAAmB,CACvB,oCACA,iCACA,sCACA,wEAGIC,EAAc,CAClB,kCACA,iBACA,wDAGF,OAAQJ,GACN,IAAK,QAEH,OADWC,EAAaI,KAAKC,MAAMD,KAAKE,SAAWN,EAAaO,SAElE,IAAK,UAEH,OADWN,EAAeG,KAAKC,MAAMD,KAAKE,SAAWL,EAAeM,SAEtE,IAAK,OAEH,OADWJ,EAAYC,KAAKC,MAAMD,KAAKE,SAAWH,EAAYI,SAEhE,IAAK,YAEH,OADWL,EAAiBE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAiBK,SAE1E,QACE,MAAO,MA4EAC,CAAiBrB,IAAoBW,MAAM,KAAK,SCnHzCW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.09b800cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction between(x, min, max) {\n  return x >= min && x <= max\n}\n\nfunction determineCaption(condition) {\n  const nightCaption = [\n    \"Jangan lupa baca doa tidurnya\",\n    \"Jangan sampe salah bantal, nanti pegel pegel\",\n    \"Jangan begadang terus yah\",\n    \"Charge hapenya jangan lupa, klo besok mau pergi\",\n    \"Mimpi indah yah\",\n  ]\n\n  const morningCaption = [\n    \"Jangan lupa bersyukur dan jangan lupa sarapan :D\",\n    \"E-Learning lho jangan lupa, sarapan juga ocew\",\n    \"Hati hati pas berangkat ngampus ya\",\n    \"Semangat untuk hari ini, jangan lupa sarapan ya\",\n  ]\n\n  const afternoonCaption = [\n    \"Kalau pulang ngampus hati hati ya\",\n    \"Selalu hati hati di jalan yahh\",\n    \"Selalu berdoa saat jalan balik ocew\",\n    \"Di check check barang bawaan nya, jangan sampe ketinggalan di kampus\"\n  ]\n\n  const noonCaption = [\n    \"Pastinya masih semangat dong :D\",\n    \"Ganbatteeeeeee\",\n    \"Semangat ya, eh ya jangan lupa makan, udah siang nih\",\n  ]\n\n  switch (condition) {\n    case \"NIGHT\":\n      var item = nightCaption[Math.floor(Math.random() * nightCaption.length)];\n      return item\n    case \"MORNING\":\n      var item = morningCaption[Math.floor(Math.random() * morningCaption.length)];\n      return item\n    case \"NOON\":\n      var item = noonCaption[Math.floor(Math.random() * noonCaption.length)];\n      return item\n    case \"AFTERNOON\":\n      var item = afternoonCaption[Math.floor(Math.random() * afternoonCaption.length)];\n      return item\n    default:\n      return \":)\"\n  }\n}\n\nfunction determineGreeting() {\n  var today = new Date()\n  var curHr = today.getHours()\n\n  if (between(curHr, 0, 1)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 1, 2)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 2, 3)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 3, 4)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 4, 5)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 5, 6)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 6, 7)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 7, 8)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 8, 9)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 9, 10)) {\n    return \"MORNING,Selamat Pagi\" // Morning\n  } else if (between(curHr, 10, 11)) {\n    return \"NOON,Selamat Siang\" // Noon\n  } else if (between(curHr, 11, 12)) {\n    return \"NOON,Selamat Siang\" // Noon\n  } else if (between(curHr, 12, 13)) {\n    return \"NOON,Selamat Siang\" // Noon\n  } else if (between(curHr, 13, 14)) {\n    return \"NOON,Selamat Siang\" // Noon\n  } else if (between(curHr, 14, 15)) {\n    return \"NOON,Selamat Siang\" // Noon\n  } else if (between(curHr, 15, 16)) {\n    return \"AFTERNOON,Selamat Sore\" // Afternoon\n  } else if (between(curHr, 16, 17)) {\n    return \"AFTERNOON,Selamat Sore\" // Afternoon\n  } else if (between(curHr, 17, 18)) {\n    return \"AFTERNOON,Selamat Sore\" // Afternoon\n  } else if (between(curHr, 18, 19)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 19, 20)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 20, 21)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 21, 22)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 22, 23)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  } else if (between(curHr, 23, 24)) {\n    return \"NIGHT,Selamat Malam\" // Night\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{\n        color: \"#000000\",\n        backgroundColor: \"#ecf0f1\"\n      }}>\n        <div>\n          <h1 style={{\n            fontSize: \"64px\",\n            fontWeight: \"bold\"\n          }}>\n            {determineGreeting().split(\",\")[1]}\n          </h1>\n          <p style={{\n            fontWeight: \"normal\"\n          }}>\n            {determineCaption(determineGreeting().split(\",\")[0])}\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}